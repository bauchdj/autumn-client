// generated by borea

import { client } from "./client.gen";
import * as sdk from "./sdk.gen";
import * as types from "./types.gen";

/**
 * AutumnAPI - Client wrapper for the Autumn API
 * Auto-generated from OpenAPI specification
 */
export class AutumnAPI {
  /**
   * Creates a new instance of the AutumnAPI client
   * @param apiKey API key for authentication (defaults to process.env.AUTUMN_API_KEY)
   */
  constructor(private apiKey: string = process.env.AUTUMN_API_KEY || "") {
    client.setConfig({
      headers: { Authorization: "Bearer " + this.apiKey },
    });
  }

  /**
   * Returns a Stripe Checkout URL for the customer to complete their purchase, or handles the purchase if the customer's card is already on file.
   */
  async attach(body: types.AttachData["body"]) {
    return sdk.attach({
      client,
      body,
    });
  }

  /**
   * Create a new customer
   */
  async customers(body: types.CustomersData["body"]) {
    return sdk.customers({
      client,
      body,
    });
  }

  /**
   * Get the customer's Stripe billing portal URL, so they can manage their subscription and see invoice history.
   */
  async billingPortal(customer_id: string) {
    return sdk.billingPortal({
      client,
      path: { customer_id: customer_id },
    });
  }

  /**
   * Send a usage event to Autumn
   */
  async events(body: types.EventsData["body"]) {
    return sdk.events({
      client,
      body,
    });
  }

  /**
   * Check if a customer is allowed to use a feature
   */
  async entitled(body: types.EntitledData["body"]) {
    return sdk.entitled({
      client,
      body,
    });
  }
}
